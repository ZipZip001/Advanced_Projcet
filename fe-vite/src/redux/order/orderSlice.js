import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import { message } from 'antd';

const initialState = {
    carts:[]
};

export const orderSlice = createSlice({
  name: 'order',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    doAddBookAction: (state, action) =>{
        let carts = state.carts;
        const item = action.payload;

        let isExistindex = carts.findIndex(c => c._id === item._id);
        if ( isExistindex > -1){
            carts[isExistindex].quantity = carts[isExistindex].quantity + item.quantity
            if(carts[isExistindex].quantity > carts[isExistindex].detail.quantity){
                carts[isExistindex].quantity = carts[isExistindex].detail.quantity;
            }
        }else{
            carts.push({quantity: item.quantity, _id: item._id, detail: item.detail})
        }
        //update reduce
        state.carts = carts;
        message.success("Sản phẩm đã được thêm vào giỏ hàng");
    },
    doUpdateCartAction: (state, action) =>{
        let carts = state.carts;
        const item = action.payload;

        let isExistindex = carts.findIndex(c => c._id === item._id);
        if ( isExistindex > -1){
            carts[isExistindex].quantity = carts[isExistindex].quantity + item.quantity
            if(carts[isExistindex].quantity > carts[isExistindex].detail.quantity){
                carts[isExistindex].quantity = carts[isExistindex].detail.quantity;
            }
        }else{
            carts.push({quantity: item.quantity, _id: item._id, detail: item.detail})
        }
        //update reduce
        state.carts = carts;
    },
    doDeleteItemCartAction: (state, action) =>{
        state.carts = state.carts.filter(c => c._id !== action.payload._id)
    },
    doPlaceOrderAction: (state, action) =>{
        state.carts = [];
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
  },
}); 

export const { doAddBookAction, doUpdateCartAction, doDeleteItemCartAction, doPlaceOrderAction } = orderSlice.actions;



export default orderSlice.reducer;
